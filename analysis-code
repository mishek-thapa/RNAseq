RUNNING RNAseq software

#FASTQC
# Run a fastqc report on all files in the directory.
cd ~/edu/lec7 #go to directory
fastqc *.fastq #run fastqc on all fastq files in the directory

#runFASTQC using parallel computing and then mv the files
find /mnt/Alma/Data/RNAseq/flowcell/ -name '*.fastq.gz' | awk '{printf("fastqc \"%s\"\n", $0)}' | parallel -j 10 â€”verbose

#move fast q reports
 find /mnt/Alma/Data/RNAseq/flowcell/ -name '*fastqc.*' | xargs -I '{}' mv '{}' /mnt/Alma/Data/RNAseq/flowcell/rawFastqc_reports



#Trimmomatic 
# Trimmomatic uses a different set of paramters and philosophy. Parameters need to be space separated words
# where the sub-parameters  are separated by a colon. Basically they invented their own parameter formats.
#Really DUMB



trimmomatic SE -phred33 ~/Desktop/rnaseq/data/SRR519926_1.fastq ~/Desktop/rnaseq/results/trimmomatic_1.fq SLIDINGWINDOW:4:30 MINLEN:35 TRAILING:3
trimmomatic PE -phred33 SRR519926_1_R1.fastq SRR519926_1_R2.fastq trimmomatic_R1.fq trimmomatic_R2.fq SLIDINGWINDOW:4:30 MINLEN:35 TRAILING:3

2020-01-16_3_S16_L002_R2_001.fastq

PE -phred33 2020-01-16_3_S16_L002_R1_001.fastq1_001.fastq 2020-01-16_3_S16_L002_R1_001.fastq1_002.fastq 2020-01-16_3_S16_L002_R1_001.fastq_R1_paired.fq.gz 2020-01-16_3_S16_L002_R1_001.fastq1_unpaired.fq.gz 2020-01-16_3_S16_L002_R1_001.fastq_R2_paired.fq.gz 2020-01-16_3_S16_L002_R1_001.fastq2_unpaired.fq.gz LEADING:5 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36 ILLUMINACLIP:TruSeq3-PE.fa:2:30:10:2:keepBothReads


PE -phred33 2020-01-16_3_S16_L002_R2_001.fastq1_001.fastq 2020-01-16_3_S16_L002_R2_001.fastq1_002.fastq 2020-01-16_3_S16_L002_R2_001.fastq_R1_paired.fq.gz 2020-01-16_3_S16_L002_R2_001.fastq1_unpaired.fq.gz 2020-01-16_3_S16_L002_R2_001.fastq_R2_paired.fq.gz 2020-01-16_3_S16_L002_R2_001.fastq2_unpaired.fq.gz LEADING:5 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36 ILLUMINACLIP:TruSeq3-PE.fa:2:30:10:2:keepBothReads







#Run Trimmomatic across all files in a folder

cd desktop/rnaseq/data

baseFilename=`basename $file .tex`

for file in /media/circuit/Gustav/rnaseq/data/transcripts/singlelane/*_R1_001.fastq.gz; do withpath="${file}"; filename=${withpath##*/}; base=`basename $filename _R1_001.fastq.gz`; java -jar ~/src/Trimmomatic-0.39/trimmomatic-0.39.jar PE /media/circuit/Gustav/rnaseq/data/transcripts/singlelane/"${base}"*_R1_001.fastq.gz /media/circuit/Gustav/rnaseq/data/transcripts/singlelane/"${base}"*_R2_001.fastq.gz /media/circuit/Gustav/results/trimmomatic/singlelane/"${base}"_R1.trimmed_PE.fastq.gz /media/circuit/Gustav/rnaseq/results/trimmomatic/singlelane/"${base}"_R1.unpaired.fastq.gz /media/circuit/Gustav/rnaseq/results/trimmomatic/singlelane/"${base}"_R2.trimmed_PE.fastq.gz /media/circuit/Gustav/rnaseq/results/trimmomatic/singlelane/"${base}"_R2.unpaired.fastq.gz  ILLUMINACLIP:TruSeq3-PE.fa:2:30:10:2:keepBothReads LEADING:5 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36; done


Easiest way is to use the auto_trim script here:https://github.com/lakhujanivijay/I-Shell-Do-This/blob/master/automation_of_trimmomatic/auto_trim.sh
-make sure to edit the parameters and cd into the adapters

~/src/Trimmomatic-0.39/adapters$ source ~/auto_trim.sh /media/circuit/Gustav/rnaseq/data/transcripts/flowcell/*.fastq.gz




#Fastqc Redo FASTQC on the trimmed samples 

find ~/desktop/rnaseq/results/trimmomatic/ -name '*.fastq' | awk '{printf("fastqc \"%s\"\n", $0)}' | parallel -j 10 
find ~/desktop/rnaseq/results/trimmomatic -name '*fastqc.*' | xargs -I '{}' mv '{}' ~/desktop/rnaseq/results/fastqc/trimmed






#STAR Analysis

#Create a genome that STAR can use; this only has to be done once
#combine a genome with the annotations that describe where the genes are; source: https://www.ncbi.nlm.nih.gov/assembly/GCF_000001635.27

STAR --runThreadN {number of cores} --runMode genomeGenerate --genomeDir /path/to/resulting/STAR/genome/ --genomeFastaFiles /path/to/genome/fasta/file --sjdbGTFfile /path/to/GTF/or/GFF --sjdbOverhang {read length - 1}


/media/circuit/Gustav/rnaseq/results/STAR/genome
/media/circuit/Gustav/rnaseq/data/genome/Mus_musculus.GRCm38.dna.primary_assembly.fa
/media/circuit/Gustav/rnaseq/data/genome/Mus_musculus.GRCm38.101.gtf




STAR --runThreadN 15 --runMode genomeGenerate --genomeDir /media/circuit/Gustav/rnaseq/results/STAR/genome --genomeFastaFiles /media/circuit/Gustav/rnaseq/data/genome/Mus_musculus.GRCm38.dna.primary_assembly.fa --sjdbGTFfile /media/circuit/Gustav/rnaseq/data/genome/Mus_musculus.GRCm38.101.gtf --sjdbOverhang 50





#Alignment

#Now we can finally align our reads to the genome

STAR --runMode alignReads --outSAMtype BAM Unsorted --readFilesCommand zcat --genomeDir /path/to/STAR/genome/folder --outFileNamePrefix {sample name}  --readFilesIn  /path/to/R1 /path/to/R2
STAR --runMode alignReads --outSAMtype BAM Unsorted --readFilesCommand zcat --genomeDir /Desktop/rnaseq/genome/STAR/genome/ --outFileNamePrefix aligned  --readFilesIn  /desktop/rnaseq/data/trimmomatic/R1 /desktop/rnaseq/data/trimmomatic/R2



#STAR on Multiple Reads

cd /media/circuit/Gustav/rnaseq/trimmomatic/singlelane

for i in $(ls round1 | sed s/_R[12]_pair_001.fastq.gz// | sort -u); do STAR \
--genomeLoad  LoadAndKeep \
--readFilesCommand zcat \
--outSAMtype BAM Unsorted \
--genomeDir /media/circuit/Gustav/rnaseq/results/STAR/genome  \
--readFilesIn round1/${i}_R1_pair_001.fastq.gz,round1/${i}_R2_pair_001.fastq.gz \
--runThreadN 10 --outFileNamePrefix aligned/$i. \
--quantMode GeneCounts; done





ln -s /media/circuit/Gustav/rnaseq/results/STAR/data  ~/Downloads/RNAseq


